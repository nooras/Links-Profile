type Links {
  id: Int!
  link: String!
  linkName: String!
  userId: Int!
}

type Query {
  getLinksList: [Links]
    @dbquery(type: "mysql", table: "links", configuration: "mysql_config")
  """
  This query is an example of how to simply paginate your responses.
  """
  getPaginatedLinksList(first: Int!, after: Int!): [Links]
    @dbquery(
      type: "mysql"
      query: """
      select * from `links` limit ? offset ?
      """
      configuration: "mysql_config"
    )
  """
  In this example, a single query parameter is passed. If the request to the DB will
  return at most one value you can remove the square brackets from the result.
  """
  getLinksById(id: Int!): [Links]
    @dbquery(
      type: "mysql"
      query: """
      select * from `links` where `id` = ?
      """
      configuration: "mysql_config"
    )

  getLinksByUserId(userId: Int!): [Links]
    @dbquery(
      type: "mysql"
      query: """
      select * from `links` where `userId` = ?
      """
      configuration: "mysql_config"
    )
  """
  In this example, two query parameters are passed. If the request to the DB will
  return at most one value you can remove the square brackets from the result.
  """
  getLinksByIdAndLink(id: Int!, link: String!): [Links]
    @dbquery(
      type: "mysql"
      query: """
      select * from `links` where `id` = ? and `link` = ?
      """
      configuration: "mysql_config"
    )
}

type Mutation {
  """
  In this mutation example you can see how to do a mutation to insert data in the database.
  """
  insertLinks(link: String!, linkName: String!, userId:  String!): Links
    @dbquery(
      type: "mysql"
      table: "links"
      dml: INSERT
      configuration: "mysql_config"
    )
  """
  In this mutation example you can see how to do a mutation to delete data from the database.
  """
  deleteLinks(id: Int!, link: String!, linkName: String!): Links
    @dbquery(
      type: "mysql"
      table: "links"
      dml: DELETE
      configuration: "mysql_config"
    )
}
