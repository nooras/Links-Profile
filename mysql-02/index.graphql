type Users {
  name: String!
  password: String!
  userId: Int!
  email: String!
}

type Query {
  getUsersList: [Users]
    @dbquery(type: "mysql", table: "Users", configuration: "mysql_config")
  """
  This query is an example of how to simply paginate your responses.
  """
  getPaginatedUsersList(first: Int!, after: Int!): [Users]
    @dbquery(
      type: "mysql"
      query: """
      select * from `Users` limit ? offset ?
      """
      configuration: "mysql_config"
    )
  """
  In this example, a single query parameter is passed. If the request to the DB will
  return at most one value you can remove the square brackets from the result.
  """
  getUsersByUserId(userId: Int!): [Users]
    @dbquery(
      type: "mysql"
      query: """
      select * from `Users` where `userId` = ?
      """
      configuration: "mysql_config"
    )
  getUsersByUserName(name: String!): [Users]
    @dbquery(
      type: "mysql"
      query: """
      select * from `Users` where `name` = ?
      """
      configuration: "mysql_config"
    )
  """
  In this example, two query parameters are passed. If the request to the DB will
  return at most one value you can remove the square brackets from the result.
  """
  getUsersByUserIdAndName(userId: Int!, name: String!): [Users]
    @dbquery(
      type: "mysql"
      query: """
      select * from `Users` where `userId` = ? and `name` = ?
      """
      configuration: "mysql_config"
    )
  getUsersByUserNameAndPassword(name: String!, password: String!): [Users]
    @dbquery(
      type: "mysql"
      query: """
      select * from `Users` where  `name` = ? and `password` = ?
      """
      configuration: "mysql_config"
    )
}

type Mutation {
  """
  In this mutation example you can see how to do a mutation to insert data in the database.
  """
  insertUsers(name: String!, password: String!, email: String!): Users
    @dbquery(
      type: "mysql"
      table: "Users"
      dml: INSERT
      configuration: "mysql_config"
    )
  """
  In this mutation example you can see how to do a mutation to delete data from the database.
  """
  deleteUsers(userId: Int!, name: String!, password: String!): Users
    @dbquery(
      type: "mysql"
      table: "Users"
      dml: DELETE
      configuration: "mysql_config"
    )
}
